# This is a basic workflow to help you get started with Actions

name: Jobs_Scraping_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push event 
  push:
    branches: [ dev,prod ]
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  python-build:
    if: ${{ github.event_name == 'workflow_dispatch' }}       # Run only if triggered manually
    runs-on: ubuntu-latest
    container: python:3.8-alpine  # same as the one on the dockerfile
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Create env file
        run: |
          touch .env
          echo HEADERS=${{secrets.HEADERS}} >> .env
          echo PASSWORD=${{ secrets.PASSWORD }} >> .env
          echo PROXY=${{ secrets.PROXY }} >> .env
          echo RECEIVER_EMAIL=${{ secrets.RECEIVER_EMAIL }} >> .env
          echo SENDER_EMAIL=${{ secrets.SENDER_EMAIL }} >> .env
          cat .env
          
      - name: docker build job_scrapy_app
        run: |
          docker build -t kyien_jobs_scraping/python38:v1.0.0 .
          
        # login to docker hub
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: docker push to github repo
        run: |
          docker push kyien_jobs_scraping/python38:v1.0.0
    
    
      
    
